plugins {
	id 'java'
//	boot version 2.7.x버젼
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'

//	boot version 3.0.6 이후
//	id 'org.springframework.boot' version '3.0.6'
//	id 'io.spring.dependency-management' version '1.1.0'
	id "org.openapi.generator" version "6.5.0"
	id "com.diffplug.eclipse.apt" version "3.26.0"
}

apply plugin: 'org.openapi.generator'
apply plugin: 'eclipse'

group = 'com.schooldevops.apifirst.apifirstsamples'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}
//	boot version 2.7.5 버젼
ext {
	set('springCloudVersion', "2021.0.4")
}

//	boot version 3.0.6 이후
//ext {
//	set('springCloudVersion', "2022.0.3")
//}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
	imports {
		mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:2.4.4"
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		exclude group: 'ch.qos.logback', module: 'logback-classic'
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	1. 기본 의존성 정보
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

//	2. springdoc-openapi 적용 정보 (Swagger 적용을 위한 정보)
	//	boot version 2.7.5 버젼
	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
	implementation 'io.swagger.core.v3:swagger-annotations-jakarta:2.2.11'
	//	boot version 3.0.6 버젼
//	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

//	3. openapi generator 적용을 위한 정보
	//	boot version 2.7.5 버젼
	implementation 'org.openapitools:openapi-generator:5.1.1'
	implementation "org.openapitools:openapi-generator-gradle-plugin:5.1.1"
	//	boot version 3.0.6 버젼
//	implementation 'org.openapitools:openapi-generator:6.5.0'
//	implementation "org.openapitools:openapi-generator-gradle-plugin:6.5.0"

	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'

//	4. 기타 설정..
}

//openApiGenerate {
//	verbose.set(true)
//	generatorName.set("spring")
//	library.set("spring-boot")
//	inputSpec.set(project.file("$rootDir/src/main/resources/petstore.yaml").absolutePath)
////	outputDir.set(project.file("$rootDir/src/main/").absolutePath)
//    outputDir.set(project.file("$buildDir/generated-sources").absolutePath)
//	apiPackage.set("com.schooldevops.apifirst.openapi.rest")
//	modelPackage.set("com.schooldevops.apifirst.openapi.domain")
//	configOptions.set(
//			[
//					interfaceOnly: "true",
//					useBeanValidation: "true",
//					performBeanValidation: "true",
//					serializableModel: "true",
//					sourceFolder: "/java",
//					implFolder: "/java",
//			]
//	)
//}



def swaggerMap = [
		"petstore": "petstore.yaml",
		"bopoUser": "bopo-user.yaml"
]

swaggerMap.each{entry ->
//	println "$rootDir/src/main/resources/api/${entry.value}"
	tasks.create("openApiGenerate-" + entry.key, org.openapitools.generator.gradle.plugin.tasks.GenerateTask, {
//		verbose.set(true)
		generatorName.set("spring")
		library.set("spring-boot")
//		print project.file("$rootDir/src/main/resources/api/${entry.value}").absolutePath
		inputSpec.set("$rootDir/src/main/resources/api/${entry.value}")

//		inputSpec.set(project.file("$rootDir/src/main/resources/${specFile}").absolutePath)
		outputDir.set(project.file("$buildDir/generated-sources").absolutePath)
		apiPackage.set("com.schooldevops.apifirst.openapi.${entry.key}.rest")
		modelPackage.set("com.schooldevops.apifirst.openapi.${entry.key}.domain")
		configOptions.set(
				[
						interfaceOnly: "true",
						useBeanValidation: "true",
						performBeanValidation: "true",
						serializableModel: "true",
						sourceFolder: "/java",
						implFolder: "/java",
						useTags: "true"
				]
		)
	})
}

tasks.register("openApiGenerateAll") {
	print swaggerMap.entrySet().stream().map(entry -> "openApiGenerate-${entry.key}").toArray()
	dependsOn(swaggerMap.entrySet().stream().map(entry -> "openApiGenerate-${entry.key}").toArray())
}

//openApiGenerate{
//	openApiGenerateAll({})
//}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'build/generated-sources/java']
        }
    }
}

compileJava.dependsOn tasks.openApiGenerateAll